/*
 * Copyright (C) 2022, Stephan Mueller <smueller@chronox.de>
 *
 * License: see LICENSE file in root directory
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, ALL OF
 * WHICH ARE HEREBY DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
 * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 * USE OF THIS SOFTWARE, EVEN IF NOT ADVISED OF THE POSSIBILITY OF SUCH
 * DAMAGE.
 */

#ifndef KYBER_ALIGN_AVX2_H
#define KYBER_ALIGN_AVX2_H

#include <stdint.h>
#include <immintrin.h>

#ifdef __cplusplus
extern "C"
{
#endif

#define ALIGNED_UINT8_COEFFS(N) N
#define ALIGNED_UINT8_M256I(N) ((N + 31) / 32)

#define ALIGNED_UINT8(N)						       \
	union {								       \
		uint8_t coeffs[ALIGNED_UINT8_COEFFS(N)];		       \
		__m256i vec[ALIGNED_UINT8_M256I(N)];			       \
	}

#define ALIGNED_INT16(N)						       \
	union {								       \
		int16_t coeffs[N];					       \
		__m256i vec[(N + 15) / 16];				       \
	}

#ifdef __cplusplus
}
#endif

#endif /* KYBER_ALIGN_AVX2_H */
